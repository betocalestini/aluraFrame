{"version":3,"sources":["../../app-es6/services/NegociacaoService.js"],"names":["HttpService","ConnectionFactory","NegociacaoDao","Negociacao","NegociacaoService","_http","get","then","negociacoes","console","log","map","objeto","Date","data","quantidade","valor","catch","erro","Error","Promise","all","obterNegociacoesDaSemana","obterNegociacoesDaSemanaAnterior","obterNegociacoesDaSemanaRetrasada","periodos","reduce","dados","periodo","concat","dado","negociacao","getConnection","connection","dao","adiciona","listaTodos","apagaTodos","listaAtual","obterNegociacoes","filter","some","negociacaoExistente","JSON","stringify"],"mappings":"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","file":"NegociacaoService.js","sourcesContent":["import { HttpService } from './HttpService';\nimport { ConnectionFactory } from './ConnectionFactory';\nimport { NegociacaoDao } from '../dao/NegociacaoDao';\nimport { Negociacao } from '../models/Negociacao';\n\nexport class NegociacaoService {\n   constructor() {\n      this._http = new HttpService();\n   }\n\n   obterNegociacoesDaSemana() {\n      return this._http\n         .get('negociacoes/semana')\n         .then((negociacoes) => {\n            console.log(negociacoes);\n            return negociacoes.map(\n               (objeto) => new Negociacao(new Date(objeto.data), objeto.quantidade, objeto.valor)\n            );\n         })\n         .catch((erro) => {\n            console.log(erro);\n            throw new Error('Não foi possível obter as negociações da semana');\n         });\n   }\n\n   obterNegociacoesDaSemanaAnterior() {\n      return this._http\n         .get('negociacoes/anterior')\n         .then((negociacoes) => {\n            console.log(negociacoes);\n            return negociacoes.map(\n               (objeto) => new Negociacao(new Date(objeto.data), objeto.quantidade, objeto.valor)\n            );\n         })\n         .catch((erro) => {\n            console.log(erro);\n            throw new Error('Não foi possível obter as negociações da semana anterior');\n         });\n   }\n\n   obterNegociacoesDaSemanaRetrasada() {\n      return this._http\n         .get('negociacoes/retrasada')\n         .then((negociacoes) => {\n            console.log(negociacoes);\n            return negociacoes.map(\n               (objeto) => new Negociacao(new Date(objeto.data), objeto.quantidade, objeto.valor)\n            );\n         })\n         .catch((erro) => {\n            console.log(erro);\n            throw new Error('Não foi possível obter as negociações da semana retrasada');\n         });\n   }\n\n   obterNegociacoes() {\n      return Promise.all([\n         this.obterNegociacoesDaSemana(),\n         this.obterNegociacoesDaSemanaAnterior(),\n         this.obterNegociacoesDaSemanaRetrasada(),\n      ])\n         .then((periodos) => {\n            let negociacoes = periodos\n               .reduce((dados, periodo) => dados.concat(periodo), [])\n               .map((dado) => new Negociacao(new Date(dado.data), dado.quantidade, dado.valor));\n\n            return negociacoes;\n         })\n         .catch((erro) => {\n            throw new Error(erro);\n         });\n   }\n\n   cadastra(negociacao) {\n      return ConnectionFactory.getConnection()\n         .then((connection) => new NegociacaoDao(connection))\n         .then((dao) => dao.adiciona(negociacao))\n         .then(() => 'Negociação adicionada com sucesso')\n         .catch((erro) => {\n            console.log(erro);\n            throw new Error('Não foi possível adicionar a negociação');\n         });\n   }\n\n   lista() {\n      return ConnectionFactory.getConnection()\n         .then((connection) => new NegociacaoDao(connection))\n         .then((dao) => dao.listaTodos())\n         .catch((erro) => {\n            console.log(erro);\n            throw new Error('Não foi possível obter as negociações');\n         });\n   }\n\n   apaga() {\n      return ConnectionFactory.getConnection()\n         .then((connection) => new NegociacaoDao(connection))\n         .then((dao) => dao.apagaTodos())\n         .then(() => 'Negociações apagadas com sucesso')\n         .catch((erro) => {\n            console.log(erro);\n            throw new Error('Não foi possível apagar as negociações');\n         });\n   }\n\n   importa(listaAtual) {\n      return this.obterNegociacoes()\n         .then((negociacoes) =>\n            negociacoes.filter(\n               (negociacao) =>\n                  !listaAtual.some(\n                     (negociacaoExistente) =>\n                        JSON.stringify(negociacao) == JSON.stringify(negociacaoExistente)\n                  )\n            )\n         )\n         .catch((erro) => {\n            console.log(erro);\n            throw new Error('Não foi possível buscar negociações para importar');\n         });\n   }\n}\n"]}